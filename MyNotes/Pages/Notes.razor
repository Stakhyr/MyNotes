@page "/Notes"
@using MyNotes.Data
@inject NoteService noteService



@if (NoteObj is null)
{
    <p><em>Loading... !</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    <NavLink class="nav-link" href="AddNote">
                        <input type="button" class="btn btn-primary" value="New note" />
                    </NavLink>
                
                </th>
               
                <th>
                    <div class="form-group">
                        <input type="text" @bind-value="@searchTerm" />
                        <input type="button" value="Search" @onclick="@SearchNotes" />
                    </div>
                </th>
                <th>

                    <p> Total notes: @totalNotes</p>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var note in NoteObj)
            {
            <tr>
                <td>@note.Title</td>
                <td>@note.Text</td>
                <td>
                    <a class="nav-link" href="EditNote/@note.Id">
                        <div class="btn btn-primary" aria-hidden="true">View</div>
                    </a>
                </td>
                <td>
                    <a class="nav-link" href="EditNote/@note.Id">
                        <div class="btn btn-primary" aria-hidden="true">Edit</div>
                    </a>
                </td>
                <td>
                    <a class="nav-link" href="DeleteNote/@note.Id">
                        <div class="btn btn-primary" aria-hidden="true">Delete</div>
                    </a>

                </td>
            </tr>
            }
        </tbody>
    </table>
}


@code {
    private int totalNotes =0;
    private string searchTerm;
    List<Note> NoteObj;
    protected override async Task OnInitializedAsync()
    {
        NoteObj = await Task.Run(() => noteService.GetAllNotesAsync());
        TotalNotesCount();
    }

    protected async Task SearchNotes()
    {
        NoteObj = await Task.Run(() => noteService.SeachTermsAsync(searchTerm));
    }

    protected void TotalNotesCount()
    {
        totalNotes = NoteObj.Count;
    }
}